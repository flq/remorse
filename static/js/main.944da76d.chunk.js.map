{"version":3,"sources":["components/Utils.js","components/GlobalCommands.js","AppActions.js","components/Navigation.js","Training/TrainingReducer.js","components/MorseLib.js","AppReducer.js","TypingScreen/TypingReducer.js","components/SoundLib.js","TypingScreen/Actions.js","TypingScreen/Morse.js","TypingScreen/TypingScreen.js","Training/LetterScope.js","Training/TrainConfiguration.js","Training/TrainingScreen.js","Training/TrainingActions.js","Training/Writing/TrainingSpecifics.js","Training/Writing/WritingScreen.js","Training/Reading/TrainingSpecifics.js","Training/Reading/ReadingScreen.js","TrainingData/TabularData.js","TrainingData/ChartData.js","TrainingData/TrainingDataScreen.js","App.js","registerServiceWorker.js","index.js"],"names":["APP_STATE_KEY","APP_READ_TRAINDATA_KEY","APP_WRITE_TRAINDATA_KEY","If","_ref","condition","children","NumberWithUnit","_ref2","unit","react_default","a","createElement","className","storage","window","localStorage","setItem","k","v","this","getItem","storeObject","key","object","JSON","stringify","retrieveObject","value","parse","getRandomInt","min","max","Math","ceil","floor","random","GlobalCommands","connect","s","saveProgress","dispatch","getState","type","id","onClick","role","aria-label","Navigation","NavLink","to","components_GlobalCommands","updateCurrentTraining","state","action","fNewCurrentTraining","Object","objectSpread","currentTraining","appReducer","combineReducers","typing","arguments","length","undefined","userInput","soundSpeed","train","trainCount","lettersInScope","ct","started","itemsLeft","currentTime","act","currentLetter","results","concat","toConsumableArray","succeeded","nextLetter","ended","successRate","LETTERS","codes","lettersToCodes","codesToLetters","i","charToMorseCode","char","toLowerCase","DOT_LENGTH","DASH_LENGTH","PAUSE","oscillator","audioCtx","AudioContext","webkitAudioContext","createOscillator","frequency","start","x","console","warn","destination","disconnect","textAsMorseSound","_x","_x2","_textAsMorseSound","apply","_callee","input","_arr","_i","c","code","regenerator_default","wrap","_context","prev","next","resume","Array","from","asyncPlayMorse","delay","stop","_x3","_asyncPlayMorse","_callee2","characters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_args2","_context2","Symbol","iterator","done","t0","startSound","stopSound","abrupt","log","t1","return","finish","millisecs","Promise","res","rej","setTimeout","changeMorsedText","fragments","split","shift","join","changeSoundSpeed","playSound","asyncToGenerator","mark","_getState$typing","RENDER_MODES","morse","RENDER_BOTH","MorseWord","word","morseChars","map","MorseChar","WordsToMorse","text","_ref3","_ref3$renderMode","renderMode","TypingScreen","Actions","_ref$userInput","_ref$soundSpeed","count","autoFocus","autoComplete","onChange","e","currentTarget","placeholder","step","LetterScope","scope","changeWritingScope","l","LetterSelector","letter","inScope","indexOf","selectLetter","classes","classNames","TrainConfiguration","putAllInScope","removeAllFromScope","changeTrainCount","startTraining","assign","disabled","TrainingScreen","evaluateUserInput","expectedInput","forceStopTraining","saveTraining","keybinding_default","onKey","Preparation","Results","_ref2$results","success","fail","createTrainingActions","trainDataStorageKey","nextLetterProvider","inputFromKey","expectedInputFromCurrentTrainingSet","timer","clearInterval","setInterval","trainingState","_trainingFrame","idx","slice","_getState$train","trainData","dataPoint","time","Date","scopeRatio","toFixed","amount","timeTaken","trainingData","push","reduce","sum","r","WriteTraining","WritingScreen","props","ReadTraining","ReadingScreen","TabularDataFactory","TabularData","header","data","timeString","d","toLocaleDateString","getHours","getMinutes","getTime","calculateMorscore","ChartDataFactory","ChartData","tunedData","groupedData","groupBy","acc","items","date","total","item","charPerMin","parseInt","mapValues","parseFloat","originalDay","day","newDay","oldDay","timeDiff","abs","getTimeDifference","mapReduceForChart","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","label","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","stroke","name","TrainingDataScreen","match","SubNav","parent","url","Route","path","render","initialState","store","createStore","applyMiddleware","thunk","App","BrowserRouter","basename","process","react_redux_es","Navigation_Navigation","component","Component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.944da76d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const APP_STATE_KEY = \"remorse.state\";\r\nexport const APP_READ_TRAINDATA_KEY = \"remorse.traindata.read\";\r\nexport const APP_WRITE_TRAINDATA_KEY = \"remorse.traindata.write\";\r\n\r\nexport function If({ condition, children }) {\r\n  return condition ? children : null;\r\n}\r\n\r\nexport function NumberWithUnit({ children, unit }) {\r\n  return (\r\n    <div className=\"numberWithUnit\">\r\n      <span>\r\n        {children}\r\n      </span>\r\n      <span>\r\n        {unit}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst storage = window.localStorage || {\r\n  setItem(k, v) {\r\n    this[k] = v;\r\n  },\r\n  getItem(k) {\r\n    return this[k];\r\n  }\r\n};\r\n\r\nexport function storeObject(key, object) {\r\n  storage.setItem(key, JSON.stringify(object));\r\n}\r\n\r\nexport function retrieveObject(key) {\r\n  const value = storage.getItem(key);\r\n  return value ? JSON.parse(value) : null;\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  //The maximum is exclusive and the minimum is inclusive\r\n  return Math.floor(Math.random() * (max - min)) + min; \r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { saveProgress } from \"../AppActions\";\r\n\r\nfunction Inner({ saveProgress }) {\r\n  return (\r\n    <div id=\"globalCommands\">\r\n      <button onClick={saveProgress}>\r\n        <span role=\"img\" aria-label=\"Save state\">\r\n          &#128190;\r\n        </span>\r\n      </button>\r\n      <span className=\"tooltiptext\">Save training settings</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GlobalCommands = connect(\r\n  s => s,\r\n  { saveProgress }\r\n)(Inner);\r\n\r\nexport default GlobalCommands;\r\n","import {storeObject, APP_STATE_KEY  } from \"./components/Utils\";\r\n\r\nexport function saveProgress() {\r\n  return (dispatch, getState) => {\r\n    storeObject(APP_STATE_KEY, getState());\r\n    dispatch({type: \"NO_OP\"});\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navigation.css';\r\nimport GlobalCommands from \"./GlobalCommands\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/typing\">Type text</NavLink>\r\n      <NavLink to=\"/test-writing-morse\">Test your writing skills</NavLink>\r\n      <NavLink to=\"/test-reading-morse\">Test your reading skills</NavLink>\r\n      <NavLink to=\"/training-data\">See your training data</NavLink>\r\n      <GlobalCommands />\r\n    </nav>\r\n  );\r\n}","export default function train(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_TRAIN_COUNT\":\r\n      return { ...state, trainCount: action.value };\r\n    case \"CHANGE_TRAINING_SCOPE\":\r\n      return {\r\n        ...state,\r\n        lettersInScope: action.lettersInScope\r\n      };\r\n    case \"START_TRAINING\":\r\n      return updateCurrentTraining(state, action, ct => ({\r\n        started: true,\r\n        itemsLeft: state.trainCount,\r\n        currentTime: -4\r\n      }));\r\n    case \"TRAINING_FRAME\":\r\n      return updateCurrentTraining(state, action, (ct, act) => ({\r\n        ...ct,\r\n        currentLetter: act.currentLetter || ct.currentLetter,\r\n        currentTime: ct.currentTime + 1\r\n      }));\r\n    case \"TRAINING_UPDATE\":\r\n      return updateCurrentTraining(state, action, (ct, act) => ({\r\n        ...ct,\r\n        userInput: act.userInput\r\n      }));\r\n    case \"TRAINING_STOPPED\":\r\n      return updateCurrentTraining(state, action, (ct, act) => ({\r\n        started: false\r\n      }));\r\n    case \"TRAINING_PROCEEDS\":\r\n      return updateCurrentTraining(state, action, (ct, act) => ({\r\n        ...ct,\r\n        itemsLeft: ct.itemsLeft - 1,\r\n        results: [...(ct.results || []), act.succeeded],\r\n        currentLetter: act.nextLetter,\r\n        userInput: \"\"\r\n      }));\r\n    case \"TRAINING_ENDED\":\r\n      return updateCurrentTraining(state, action, (ct, act) => ({\r\n        ...ct,\r\n        itemsLeft: 0,\r\n        currentLetter: \"\",\r\n        userInput: \"\",\r\n        ended: true,\r\n        successRate: act.successRate\r\n      }));\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction updateCurrentTraining(state, action, fNewCurrentTraining) {\r\n  return {\r\n    ...state,\r\n    currentTraining: fNewCurrentTraining(state.currentTraining, action)\r\n  };\r\n}\r\n","export const LETTERS = [\r\n  \".\", \",\", \"?\",\r\n  \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\",\r\n  \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\",\r\n  \"y\", \"z\",\r\n  \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\nconst codes = [\r\n  \".-.-.-\", \"--..--\", \"..--..\",\r\n  \".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\",\r\n  \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\",\r\n  \"-.--\", \"--..\",\r\n  \".----\", \"..---\", \"...--\", \"....-\", \".....\", \"-....\", \"--...\", \"---..\", \"----.\", \"-----\"];\r\n\r\nconst lettersToCodes = {};\r\nconst codesToLetters = {};\r\n\r\nfor (let i = 0; i < LETTERS.length; i++) {\r\n  lettersToCodes[LETTERS[i]] = codes[i];\r\n  codesToLetters[codes[i]] = LETTERS[i];\r\n}\r\n\r\n// Special case space. We know it, but it's not really a letter\r\nlettersToCodes[\" \"] = \" \";\r\ncodesToLetters[\" \"] = \" \";\r\n\r\nexport function charToMorseCode(char) {\r\n  if (!char)\r\n    return \"\";\r\n  return lettersToCodes[char.toLowerCase()] || \"?\";\r\n}\r\n\r\nexport function morseCodeToChar(char) {\r\n  if (!char)\r\n    return \"\";\r\n  return codesToLetters[char.toLowerCase()] || \"?\";\r\n}\r\n\r\n\r\nexport function calculateMorscore(successRate, scope, amount, timeTaken) {\r\n  return (successRate * scope * (1.3 * amount / timeTaken)).toFixed(2);\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport train from \"./Training/TrainingReducer\";\r\nimport typing from \"./TypingScreen/TypingReducer\";\r\n\r\n\r\nconst appReducer = combineReducers({ typing, train });\r\nexport default appReducer;\r\n","export default function typing(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_MORSE_TEXT\":\r\n      return { ...state, userInput: action.userInput };\r\n    case \"CHANGE_SOUND_SPEED\":\r\n      return { ...state, soundSpeed: action.soundSpeed };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { charToMorseCode } from \"./MorseLib\";\r\n\r\n// based on\r\n// http://www.nu-ware.com/NuCode%20Help/index.html?morse_code_structure_and_timing_.htm\r\n// dot -> dot length, dash = 3 * dot, pause between chars = 3 * dot, \r\n// pause between words = 7 * dot\r\nexport const DOT_LENGTH = 50;\r\nexport const DASH_LENGTH = 150;\r\nexport const PAUSE = 400;\r\n\r\nlet oscillator = null;\r\nlet audioCtx = null;\r\n\r\ntry {\r\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n  oscillator = audioCtx.createOscillator();\r\n  oscillator.type = \"sine\";\r\n  oscillator.frequency.value = 880; // value in hertz\r\n  oscillator.start();\r\n} catch (x) {\r\n  console.warn(\"Oscillator not available in your env\");\r\n  // null implementations for test environment.\r\n  audioCtx = {\r\n    destination: {}\r\n  };\r\n  oscillator = {\r\n    connect: () => {},\r\n    disconnect: () => {}\r\n  };\r\n}\r\n\r\nexport async function textAsMorseSound(input, soundSpeed) {\r\n  await audioCtx.resume();\r\n  for (let c of Array.from(input)) {\r\n    var code = charToMorseCode(c);\r\n    await asyncPlayMorse(Array.from(code), soundSpeed);\r\n    await delay(DASH_LENGTH / soundSpeed); // Pause between chars\r\n  }\r\n}\r\n\r\n// characters: Array of strings like \"-\" and \".\" and \" \"\r\nexport async function asyncPlayMorse(characters, soundSpeed = 1) {\r\n  for (let c of characters) {\r\n    switch (c) {\r\n      case \".\":\r\n        startSound();\r\n        await delay(DOT_LENGTH / soundSpeed);\r\n        stopSound();\r\n        await delay(DOT_LENGTH / soundSpeed);\r\n        break;\r\n      case \"-\":\r\n        startSound();\r\n        await delay(DASH_LENGTH / soundSpeed);\r\n        stopSound();\r\n        await delay(DOT_LENGTH / soundSpeed);\r\n        break;\r\n      case \" \":\r\n        await delay(PAUSE / soundSpeed);\r\n        break;\r\n      default:\r\n        console.log(c);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction startSound() {\r\n  oscillator.connect(audioCtx.destination);\r\n}\r\n\r\nfunction stopSound() {\r\n  oscillator.disconnect(audioCtx.destination);\r\n}\r\n\r\nexport function delay(millisecs, value = null) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res(value), millisecs);\r\n  });\r\n}\r\n","import { textAsMorseSound } from \"../components/SoundLib\";\r\n\r\nexport function changeMorsedText(userInput) {\r\n  const fragments = userInput.split(\" \");\r\n  if (fragments.length > 5) {\r\n    // In reality, it's four words due to a rogue empty string.\r\n    fragments.shift();\r\n    userInput = fragments.join(\" \");\r\n  }\r\n  return {\r\n    type: \"CHANGE_MORSE_TEXT\",\r\n    userInput\r\n  };\r\n}\r\n\r\nexport function changeSoundSpeed(soundSpeed) {\r\n  return {\r\n    type: \"CHANGE_SOUND_SPEED\",\r\n    soundSpeed\r\n  };\r\n}\r\n\r\nexport function playSound() {\r\n  return async (dispatch, getState) => {\r\n    const { userInput, soundSpeed } = getState().typing;\r\n    textAsMorseSound(userInput, soundSpeed);\r\n  };\r\n}","import React from 'react';\r\nimport './Morse.css';\r\nimport {charToMorseCode} from '../components/MorseLib';\r\n\r\nconst RENDER_MODES = {\r\n  morse: 1,\r\n  char: 2\r\n}\r\n\r\nconst RENDER_BOTH = RENDER_MODES.char | RENDER_MODES.morse;\r\n\r\n\r\nfunction MorseWord({ word }) {\r\n  const morseChars = Array\r\n    .from(word)\r\n    .map((c, i) => <MorseChar key={i} char={c} />);\r\n  return <span className=\"morseWord\">{morseChars}</span>;\r\n}\r\n\r\nexport function WordsToMorse({ text }) {\r\n  if (!text)\r\n    return null;\r\n  return (\r\n    <section>\r\n      {text.split(\" \").map((word, i) => <MorseWord key={i} word={word} />)}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport function MorseChar({ char, renderMode = RENDER_BOTH }) {\r\n  return (\r\n    <div className=\"morseToken\">\r\n      {(renderMode & RENDER_MODES.char) && <span className=\"morseChar\">{char}</span> }\r\n      {(renderMode & RENDER_MODES.morse) && <span className=\"morseCode\">{charToMorseCode(char)}</span> }\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TypingScreen.css\";\r\nimport * as Actions from \"./Actions\";\r\nimport { WordsToMorse } from \"./Morse\";\r\n\r\nfunction Inner({\r\n  userInput = \"\",\r\n  count = 0,\r\n  soundSpeed = 1.0,\r\n  changeMorsedText,\r\n  changeSoundSpeed,\r\n  playSound\r\n}) {\r\n  return (\r\n    <section className=\"typingScreen\">\r\n      <form>\r\n        <input\r\n          autoFocus\r\n          type=\"text\"\r\n          className=\"userInput\"\r\n          autoComplete=\"off\"\r\n          value={userInput}\r\n          onChange={e => changeMorsedText(e.currentTarget.value)}\r\n          placeholder=\"Type what should be morsed\"\r\n        />\r\n        <div className=\"soundControls\">\r\n          <input\r\n            type=\"range\"\r\n            max=\"1.0\"\r\n            min=\"0.3\"\r\n            step=\"0.1\"\r\n            onChange={e => changeSoundSpeed(e.currentTarget.value)}\r\n            value={soundSpeed}\r\n          />\r\n          <span>{ soundSpeed * 100} %</span>\r\n          <input\r\n            type=\"button\"\r\n            className=\"soundButton\"\r\n            value=\"&#128266;\"\r\n            onClick={playSound}\r\n          />\r\n        </div>\r\n      </form>\r\n      <WordsToMorse text={userInput} />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst TypingScreen = connect(s => s.typing, Actions)(Inner);\r\n\r\nexport default TypingScreen;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { LETTERS } from \"../components/MorseLib\";\r\n\r\nexport default function LetterScope({ scope, changeWritingScope }) {\r\n  return (\r\n    <section className=\"learningScope\">\r\n      {LETTERS.map(l =>\r\n        <LetterSelector\r\n          key={l}\r\n          letter={l}\r\n          inScope={scope.indexOf(l) >= 0}\r\n          selectLetter={() => changeWritingScope(l)}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction LetterSelector({ letter, inScope, selectLetter }) {\r\n  const classes = classNames({ inScope });\r\n  return (\r\n    <button className={classes} onClick={selectLetter}>\r\n      {letter}\r\n    </button>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./Training.css\";\r\nimport { If } from \"../components/Utils\";\r\nimport LetterScope from \"./LetterScope\";\r\n\r\nexport default function TrainConfiguration({\r\n  currentTraining,\r\n  lettersInScope,\r\n  trainCount,\r\n  changeWritingScope,\r\n  putAllInScope,\r\n  removeAllFromScope,\r\n  changeTrainCount,\r\n  startTraining\r\n}) {\r\n  return (\r\n    <If condition={!(currentTraining && currentTraining.started)}>\r\n      <div className=\"flex-column\">\r\n        <div className=\"flex-row toolBox\">\r\n          <h2>What do you want to train?</h2>\r\n          <button onClick={putAllInScope}>All</button>\r\n          <button onClick={removeAllFromScope}>None</button>\r\n        </div>\r\n        <LetterScope scope={lettersInScope} {...{ changeWritingScope }} />\r\n        <div className=\"flex-row toolBox\">\r\n          <h2>Train </h2>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            step=\"10\"\r\n            onChange={e => changeTrainCount(e.currentTarget.value)}\r\n            value={trainCount}\r\n          />\r\n          <h2>\r\n            {trainCount} times.\r\n          </h2>\r\n          <button onClick={startTraining} disabled={lettersInScope.length < 2}>\r\n            Start!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </If>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport KeyBinding from \"react-keybinding-component\";\r\nimport classNames from \"classnames\";\r\nimport { If, NumberWithUnit } from \"../components/Utils\";\r\n\r\nexport default function TrainingScreen({\r\n  started,\r\n  ended,\r\n  itemsLeft,\r\n  currentTime,\r\n  currentLetter,\r\n  userInput,\r\n  results,\r\n  successRate,\r\n  expectedInput,\r\n  evaluateUserInput,\r\n  forceStopTraining,\r\n  saveTraining\r\n}) {\r\n  if (!started) return null;\r\n  return (\r\n    <div id=\"training\">\r\n      <KeyBinding onKey={e => evaluateUserInput(e.key)} />\r\n      <div className=\"toolBox\">\r\n        <button disabled={ended} onClick={forceStopTraining}>Stop the training</button>\r\n        <NumberWithUnit unit=\"seconds\">\r\n          {currentTime}\r\n        </NumberWithUnit>\r\n        <NumberWithUnit unit=\"items left\">\r\n          {itemsLeft}\r\n        </NumberWithUnit>\r\n        <h2>\r\n          {Preparation(currentTime)}\r\n        </h2>\r\n      </div>\r\n      <Results results={results} />\r\n      {\r\n        ended && <h2>Well done, you got { successRate * 100 } % right!</h2>\r\n      }\r\n      {\r\n        ended && <button id=\"saveTraining\" onClick={saveTraining}>Save Training</button>\r\n      }\r\n      <div>\r\n        <If condition={currentLetter}>\r\n          <p>\r\n            {currentLetter}\r\n          </p>\r\n        </If>\r\n        <If condition={userInput}>\r\n          <p>\r\n            {userInput}\r\n          </p>\r\n        </If>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Results({ results = [] }) {\r\n  return (\r\n    <div id=\"results\">\r\n      {results.map((v, i) => <span key={i} className={classNames({ success: v, fail: !v })} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Preparation(currentTime) {\r\n  let text = null;\r\n  if (currentTime > 0) return \"\";\r\n  switch (currentTime) {\r\n    case -4:\r\n    case -3:\r\n      text = \"Use keys '-' and '.' to write\";\r\n      break;\r\n    case -2:\r\n      text = \"Ready...\";\r\n      break;\r\n    case -1:\r\n      text = \"Steady...\";\r\n      break;\r\n    case 0:\r\n      text = \"Go!\";\r\n      break;\r\n    default:\r\n      text = \"\";\r\n      break;\r\n  }\r\n  return text;\r\n}\r\n","import { LETTERS } from \"../components/MorseLib\";\r\nimport { retrieveObject, storeObject } from \"../components/Utils\";\r\n\r\nexport default function createTrainingActions({\r\n  trainDataStorageKey,\r\n  nextLetterProvider,\r\n  inputFromKey,\r\n  expectedInputFromCurrentTrainingSet\r\n}) {\r\n  let timer = null;\r\n  function _trainingFrame(dispatch, trainingState) {\r\n    if (trainingState.currentTraining.currentTime === -1) {\r\n      // this frame the training starts\r\n      dispatch({\r\n        type: \"TRAINING_FRAME\",\r\n        currentLetter: nextLetterProvider(trainingState.lettersInScope)\r\n      });\r\n    } else {\r\n      dispatch({ type: \"TRAINING_FRAME\" });\r\n    }\r\n  }\r\n\r\n  return {\r\n    startTraining() {\r\n      return (dispatch, getState) => {\r\n        clearInterval(timer);\r\n        dispatch({ type: \"START_TRAINING\" });\r\n        timer = setInterval(() => _trainingFrame(dispatch, getState().train), 1000);\r\n      };\r\n    },\r\n\r\n    forceStopTraining() {\r\n      clearInterval(timer);\r\n      return {\r\n        type: \"TRAINING_STOPPED\"\r\n      };\r\n    },\r\n\r\n    changeWritingScope(letter) {\r\n      return (dispatch, getState) => {\r\n        const { lettersInScope } = getState().train;\r\n        const idx = lettersInScope.indexOf(letter);\r\n        const newScope =\r\n          idx === -1\r\n            ? [...lettersInScope, letter]\r\n            : [...lettersInScope.slice(0, idx), ...lettersInScope.slice(idx + 1)];\r\n        dispatch({\r\n          type: \"CHANGE_TRAINING_SCOPE\",\r\n          lettersInScope: newScope\r\n        });\r\n      };\r\n    },\r\n\r\n    putAllInScope() {\r\n      return dispatch => {\r\n        dispatch({\r\n          type: \"CHANGE_TRAINING_SCOPE\",\r\n          lettersInScope: [...LETTERS]\r\n        });\r\n      };\r\n    },\r\n\r\n    removeAllFromScope() {\r\n      return dispatch => {\r\n        dispatch({\r\n          type: \"CHANGE_TRAINING_SCOPE\",\r\n          lettersInScope: []\r\n        });\r\n      };\r\n    },\r\n\r\n    changeTrainCount(value) {\r\n      return {\r\n        type: \"CHANGE_TRAIN_COUNT\",\r\n        value\r\n      };\r\n    },\r\n\r\n    evaluateUserInput(key) {\r\n      const input = inputFromKey(key);\r\n      if (!input) return { type: \"NO_OP\" };\r\n\r\n      return (dispatch, getState) => {\r\n        let { currentTraining, lettersInScope } = getState().train;\r\n        let userInput = (currentTraining.userInput || \"\") + input;\r\n        const expectedInput = expectedInputFromCurrentTrainingSet(currentTraining.currentLetter);\r\n\r\n        if (userInput.length === expectedInput.length) {\r\n          dispatch({\r\n            type: \"TRAINING_PROCEEDS\",\r\n            succeeded: userInput === expectedInput,\r\n            nextLetter: nextLetterProvider(lettersInScope)\r\n          });\r\n          if (currentTraining.itemsLeft === 1) {\r\n            // This was the last item in the training!\r\n            clearInterval(timer);\r\n            dispatch({\r\n              type: \"TRAINING_ENDED\",\r\n              successRate: successRate(getState().train.currentTraining.results)\r\n            });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: \"TRAINING_UPDATE\",\r\n            userInput\r\n          });\r\n        }\r\n      };\r\n    },\r\n\r\n    saveTraining() {\r\n      return (dispatch, getState) => {\r\n        const trainData = getState().train;\r\n        const dataPoint = {\r\n          time: new Date(),\r\n          successRate: trainData.currentTraining.successRate,\r\n          scopeRatio: (trainData.lettersInScope.length / LETTERS.length).toFixed(2),\r\n          amount: trainData.trainCount,\r\n          timeTaken: trainData.currentTraining.currentTime\r\n        };\r\n        let trainingData = retrieveObject(trainDataStorageKey) || [];\r\n        trainingData.push(dataPoint);\r\n        storeObject(trainDataStorageKey, trainingData);\r\n        dispatch({\r\n          type: \"TRAINING_STOPPED\"\r\n        });\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nfunction successRate(results) {\r\n  var successes = results.reduce((sum, r) => (r ? sum + 1 : sum), 0);\r\n  return (successes / results.length).toFixed(2);\r\n}\r\n","import { getRandomInt, APP_WRITE_TRAINDATA_KEY } from \"../../components/Utils\";\r\nimport createTrainingActions from \"../TrainingActions\";\r\nimport { charToMorseCode } from \"../../components/MorseLib\";\r\n\r\nfunction inputFromKey(key) {\r\n  return key === \".\" || key === \"-\" ? key : null;\r\n}\r\n\r\nfunction nextLetterProvider(scope) {\r\n  const randomIndex = getRandomInt(0, scope.length);\r\n  return scope[randomIndex];\r\n}\r\n\r\nconst Actions = createTrainingActions({\r\n  trainDataStorageKey: APP_WRITE_TRAINDATA_KEY,\r\n  nextLetterProvider,\r\n  inputFromKey,\r\n  expectedInputFromCurrentTrainingSet: charToMorseCode\r\n});\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TrainConfiguration from \"../TrainConfiguration\";\r\nimport TrainingScreen from \"../TrainingScreen\";\r\nimport Actions from \"./TrainingSpecifics\";\r\n\r\nconst WriteTraining = connect(function(s) {\r\n  return s.train.currentTraining || {};\r\n}, Actions)(TrainingScreen);\r\n\r\nfunction Inner(props) {\r\n  return (\r\n    <section>\r\n      <TrainConfiguration {...props} />\r\n      <WriteTraining />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst WritingScreen = connect(function(s) {\r\n  return s.train;\r\n}, Actions)(Inner);\r\n\r\nexport default WritingScreen;\r\n","import { getRandomInt, APP_READ_TRAINDATA_KEY } from \"../../components/Utils\";\r\nimport createTrainingActions from \"../TrainingActions\";\r\nimport { charToMorseCode, morseCodeToChar } from \"../../components/MorseLib\";\r\n\r\nfunction inputFromKey(key) {\r\n  return key;\r\n}\r\n\r\nfunction nextLetterProvider(scope) {\r\n  const randomIndex = getRandomInt(0, scope.length);\r\n  return charToMorseCode(scope[randomIndex]);\r\n}\r\n\r\nconst Actions = createTrainingActions({\r\n  trainDataStorageKey: APP_READ_TRAINDATA_KEY,\r\n  nextLetterProvider,\r\n  inputFromKey,\r\n  expectedInputFromCurrentTrainingSet: morseCodeToChar\r\n});\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TrainConfiguration from \"../TrainConfiguration\";\r\nimport TrainingScreen from \"../TrainingScreen\";\r\nimport Actions from \"./TrainingSpecifics\";\r\n\r\nconst ReadTraining = connect(function(s) {\r\n  return s.train.currentTraining || {};\r\n}, Actions)(TrainingScreen);\r\n\r\nfunction Inner(props) {\r\n  return (\r\n    <section>\r\n      <TrainConfiguration {...props} />\r\n      <ReadTraining />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst ReadingScreen = connect(function(s) {\r\n  return s.train;\r\n}, Actions)(Inner);\r\n\r\nexport default ReadingScreen;\r\n","import React from \"react\";\r\nimport { retrieveObject, APP_READ_TRAINDATA_KEY, APP_WRITE_TRAINDATA_KEY } from \"../components/Utils\";\r\nimport { calculateMorscore } from \"../components/MorseLib\";\r\n\r\nexport default function TabularDataFactory(props) {\r\n  return (\r\n    <div className=\"flex-row wrap\">\r\n      <TabularData header=\"Reading\" data={retrieveObject(APP_READ_TRAINDATA_KEY) || []} />\r\n      <TabularData header=\"Writing\" data={retrieveObject(APP_WRITE_TRAINDATA_KEY) || []} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabularData({ header, data }) {\r\n  return (\r\n    <div className=\"tableData\">\r\n      <h3>\r\n        {header}\r\n      </h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>When</th>\r\n            <th>Success</th>\r\n            <th>Scope</th>\r\n            <th>Repeats</th>\r\n            <th>Duration</th>\r\n            <th>\r\n              <span>Morscore</span>\r\n              <span className=\"tooltiptext\">\r\n                The morscore takes all numbers recorded in your training and calculates a score that considers\r\n                your success, scope, size and time taken.\r\n              </span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(({ time, successRate, scopeRatio, amount, timeTaken }, i) =>\r\n            <tr key={i}>\r\n              <td>\r\n                {getTime(time)}\r\n              </td>\r\n              <td>\r\n                {successRate * 100} %\r\n              </td>\r\n              <td>\r\n                {scopeRatio * 100} %\r\n              </td>\r\n              <td>\r\n                {amount}\r\n              </td>\r\n              <td>\r\n                {timeTaken} s\r\n              </td>\r\n              <td>\r\n                {calculateMorscore(successRate, scopeRatio, amount, timeTaken)}\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getTime(timeString) {\r\n  const d = new Date(timeString);\r\n  return `${d.toLocaleDateString()} ${d.getHours()}:${d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes()}`;\r\n}","import React from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\r\nimport { retrieveObject, APP_READ_TRAINDATA_KEY, APP_WRITE_TRAINDATA_KEY } from \"../components/Utils\";\r\nimport { reduce, groupBy, mapValues } from \"lodash\";\r\n\r\nexport default function ChartDataFactory(props) {\r\n  return (\r\n    <div className=\"flex-row wrap\">\r\n      <ChartData header=\"Reading\" data={retrieveObject(APP_READ_TRAINDATA_KEY) || []} />\r\n      <ChartData header=\"Writing\" data={retrieveObject(APP_WRITE_TRAINDATA_KEY) || []} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChartData({ header, data }) {\r\n  const tunedData = mapReduceForChart(data);\r\n  return (\r\n    <div className=\"chartData\">\r\n      <h3>\r\n        {header}\r\n      </h3>\r\n      <LineChart\r\n        width={600}\r\n        height={300}\r\n        data={tunedData}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <XAxis dataKey=\"day\" label=\"Days\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"successRate\" stroke=\"green\" name=\"Success %\" />\r\n        <Line type=\"monotone\" dataKey=\"scopeRatio\" stroke=\"#8884d8\" name=\"Scope %\" />\r\n        <Line type=\"monotone\" dataKey=\"charPerMin\" stroke=\"orange\" name=\"Characters / Minute\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n * - group by day, take average of all data for that day\r\n * - absolute dates are converted to relative, starting with 1\r\n */\r\nfunction mapReduceForChart(data) {\r\n  const groupedData = groupBy(data, d => new Date(d.time).toLocaleDateString());\r\n  const reducedData = reduce(\r\n    groupedData,\r\n    (acc, items, date) => {\r\n      const total = items.length;\r\n      let item = reduce(\r\n        items,\r\n        (acc, item) => ({\r\n          successRate: (acc.successRate || 0) + item.successRate * 100,\r\n          scopeRatio: (acc.scopeRatio || 0) + item.scopeRatio * 100,\r\n          charPerMin: (acc.charPerMin || 0) + ((parseInt(item.amount, 10) / item.timeTaken) * 60)\r\n        }),\r\n        {}\r\n      );\r\n      item = mapValues(item, v => parseFloat((v / total).toFixed(2)));\r\n      item.originalDay = new Date(items[0].time);\r\n      item.day =\r\n        acc.length === 0\r\n          ? 1\r\n          : acc[acc.length - 1].day + getTimeDifference(item.originalDay, acc[acc.length - 1].originalDay);\r\n      acc.push(item);\r\n      return acc;\r\n    },\r\n    []\r\n  );\r\n  return reducedData;\r\n}\r\n\r\nfunction getTimeDifference(newDay, oldDay) {\r\n  var timeDiff = Math.abs(newDay.getTime() - oldDay.getTime());\r\n  var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n  return diffDays;\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./TrainingData.css\";\r\nimport TabularDataFactory from \"./TabularData\";\r\nimport ChartDataFactory from \"./ChartData\";\r\n\r\nexport default function TrainingDataScreen({ match }) {\r\n  return (\r\n    <div>\r\n      <SubNav parent={match.url} />\r\n      <Route path={match.url + \"/tabular\"} render={TabularDataFactory} />\r\n      <Route path={match.url + \"/chart\"} render={ChartDataFactory} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SubNav({ parent }) {\r\n  return (\r\n    <nav className=\"sub\">\r\n      <NavLink to={parent + \"/tabular\"}>Raw data</NavLink>\r\n      <NavLink to={parent + \"/chart\"}>Chart</NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Route } from \"react-router\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport { retrieveObject, APP_STATE_KEY } from \"./components/Utils\";\r\nimport appReducer from \"./AppReducer\";\r\nimport TypingScreen from \"./TypingScreen/TypingScreen\";\r\nimport WritingScreen from \"./Training/Writing/WritingScreen\";\r\nimport ReadingScreen from \"./Training/Reading/ReadingScreen\";\r\nimport TrainingDataScreen from \"./TrainingData/TrainingDataScreen\";\r\n\r\nconst initialState = retrieveObject(APP_STATE_KEY) || {\r\n  typing: {\r\n    userInput: \"\",\r\n    soundSpeed: 0.8\r\n  },\r\n  train: {\r\n    lettersInScope: [],\r\n    trainCount: 20\r\n    /*currentTraining: {\r\n          currentTime,\r\n          itemsLeft,\r\n          ...\r\n      }*/\r\n  }\r\n};\r\n\r\nconst store = createStore(appReducer, initialState, applyMiddleware(thunk));\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n        <Provider store={store}>\r\n          <div id=\"root\">\r\n            <Navigation />\r\n            <Route path=\"/typing\" component={TypingScreen} />\r\n            <Route path=\"/test-writing-morse\" component={WritingScreen} />\r\n            <Route path=\"/test-reading-morse\" component={ReadingScreen} />\r\n            <Route path=\"/training-data\" component={TrainingDataScreen} />\r\n          </div>\r\n        </Provider>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}